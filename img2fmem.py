#!/usr/bin/env python

# Image to FPGA memory map converter for use with Verilog $readmemh() etc.
# By Will Green, January 2018
# Visit http://timetoexplore.net to learn more

# Uses Pillow to convert images to suitable format for FPGA use
# - Input is image in any format Pillow supports (PNG, JPEG, TIFF, BMP etc.)
#   - http://pillow.readthedocs.io/en/latest/handbook/image-file-formats.html
# - Output is three files:
#   - 6-bit image in hex text format
#   - 12-bit palette in hex text format
#   - PNG preview of converted image
# - img2fmem does not resize images: use your image editor to do this
# - Pillow Docs: https://pillow.readthedocs.io
#   - To install Pillow: pip install Pillow

import os
import sys
from PIL import Image

COLOURS = 64;  # use 64 for 6-bit palette 

if len(sys.argv) < 2:
    print("Usage: image_file");
    sys.exit();
    
# load source image
input_file = sys.argv[1];
source_img = Image.open(input_file);
preview_img = source_img.copy();  # take a copy for later preview process

base_name = os.path.splitext(input_file)[0];
(width,height) = source_img.size;

# Reduce to 12-bit precision (4-bit per colour) in range 0-15
pixels = source_img.load();
for x in range(width):
    for y in range(height):
        pixels[x, y] = tuple([p / 16 for p in pixels[x, y]]);  # need to round down to maintain 0-15 per pixel

# Convert to limited colour palette
dest_img = source_img.convert('P', palette=Image.ADAPTIVE, colors=COLOURS);

# Generate hex image output
image_data = dest_img.getdata();
with open(base_name + '.mem', 'w') as f:
    f.write("// Image in Verilog Hex Format generated by img2fmem.py.\n");
    f.write("// Visit http://timetoexplore.net to learn more.\n")
    for d in image_data:
        f.write(hex(d)[2:])
        f.write("\n")

# Extract palette
def chunk(seq, size):
    return [seq[i:i+size] for i in range(0, len(seq), size)]
colours = [map(ord, bytes) for bytes in chunk(dest_img.palette.palette, 3)];

# Generate hex palette output 
with open(base_name + '_palette.mem', 'w') as f:
    f.write("// Palette in Verilog Hex Format generated by img2fmem.py.\n");
    f.write("// Visit http://timetoexplore.net to learn more.\n")
    for i in range(COLOURS):
        r = colours[i][0];
        g = colours[i][1];
        b = colours[i][2];
        f.write(hex(r*256 + g*16 + b)[2:]);
        f.write("\n");

# Convert preview image and save
# Process is similar: 4-bit precision but we retain 0-255 range so 0, 16, 32 etc. 
preview_pixels = preview_img.load();
for x in range(width):
    for y in range(height):
        preview_pixels[x, y] = tuple([(p / 16) * 16 for p in preview_pixels[x, y]]); 
preview_img = preview_img.convert('P', palette=Image.ADAPTIVE, colors=COLOURS);
preview_img.save(base_name + '_preview.png');
